name: PROD:02 DEPLOY Primary Node

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check version
        env:
          PRIVATE_KEY: ${{ secrets.PROD_SERVER_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.PROD_SERVER_HOST }}
          USER: ${{ secrets.PROD_SERVER_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Extract version from repository package.json
          repo_version=$(jq -r '.version' package.json)


          # Extract version from server package.json
          server_version=$(ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$HOST "jq -r '.version' /opt/apps/smyth-middleware/node-01/package.json")
          echo "Server version : $server_version"
          echo "Repo version   : $repo_version"

          # Compare versions using sort
          highest_version=$(echo -e "$repo_version\n$server_version" | sort -V | tail -n 1)
          if [[ "$highest_version" == "$repo_version" ]] && [[ "$repo_version" != "$server_version" ]]; then
            echo "Version check passed."
          else
            echo "Version check failed. Halting deployment."
            exit 1
          fi

          rm -f private_key.pem

      - name: Deploy to server
        env:
          PRIVATE_KEY: ${{ secrets.PROD_SERVER_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.PROD_SERVER_HOST }}
          USER: ${{ secrets.PROD_SERVER_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$HOST " /opt/git/sync.sh smyth-middleware"
          rm -f private_key.pem
